{"version":3,"sources":["shared/Loading.jsx","shared/selectors.js","features/temperature/selectors.js","features/card/Card.jsx","features/card/useTemperature.js","features/pagination/selectors.js","features/card/selectors.js","shared/sharedConstants.js","shared/sharedApi.js","shared/thunks.js","shared/utils.js","features/card/cardSlice.js","features/card/CardList.jsx","theme.js","features/chart/selectors.js","features/chart/useChartOptions.js","features/chart/BarChart.jsx","features/pagination/paginationSlice.js","shared/sharedSlice.js","features/pagination/Pagination.js","features/temperature/Temperature.jsx","shared/WeatherInfo.jsx","App.js","features/temperature/temperatureSlice.js","features/chart/chartSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["Loading","Box","display","justifyContent","alignItems","style","marginTop","Typography","variant","component","isLoading","state","shared","loading","getCards","card","cards","getUnit","temperature","unit","getTemperatureUnit","createSelector","useStyles","makeStyles","theme","default","border","active","Card","date","isActive","id","activateCard","temperatureValue","value","useState","setTemperatureValue","useSelector","useEffect","useTemperature","classes","className","onClick","CardContent","getPageIndex","pagination","pageIndex","getPageSize","pageSize","isPrevPageVisible","isNextPageVisible","length","getActiveCardId","activeCardId","getVisibleCards","slice","isActiveCardVisible","visibleCards","find","BASE_URL","fetchWeatherByUnit","a","fetch","process","res","json","data","list","fetchWeather","createAsyncThunk","map","index","dateTime","dt","temp","main","Date","toLocaleString","day","month","year","replaceAll","Math","round","cardSlice","createSlice","name","initialState","reducers","setActiveCardId","action","payload","extraReducers","builder","addCase","fulfilled","reduce","acc","idx","push","actions","root","width","CardList","dispatch","useDispatch","handleCardActivated","useCallback","alignSelf","createMuiTheme","typography","fontSize","palette","primary","purple","secondary","green","containerWidth","breakpoints","values","sm","h1","up","h4","h5","h6","getVisibleBars","chart","bars","options","type","maxWidth","title","text","subtitle","xAxis","categories","crosshair","labels","yAxis","min","enabled","plotOptions","column","borderWidth","pointWidth","series","legend","responsive","rules","condition","chartOptions","BarChart","setChartOptions","temperatureUnit","visibleBars","barsWIthUnits","item","newOptions","useChartOptions","highcharts","Highcharts","paginationSlice","setPage","sharedSlice","pending","changePage","newPageIdx","getState","newActiveCardId","icon","height","color","down","Pagination","isNextVisible","isPrevVisible","IconButton","aria-label","visibility","disableRipple","ArrowRightAlt","transform","formControlLabel","Temperature","FormControl","RadioGroup","row","defaultValue","onChange","target","FormControlLabel","control","Radio","label","WeatherInfo","flexDirection","margin","App","temperatureSlice","arg","meta","chartSlice","store","configureStore","reducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6b11f96e.chunk.js","sourcesContent":["import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\n\nexport default function Loading() {\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      style={{ marginTop: 150 }}\n    >\n      <Typography variant=\"h2\" component=\"h2\">\n        Loading...\n      </Typography>\n    </Box>\n  );\n}\n","export const isLoading = (state) => state.shared.loading;\n\nexport const getCards = (state) => {\n  return state.card.cards;\n};\n","import { createSelector } from \"reselect\";\n\nexport const getUnit = (state) => state.temperature.unit;\n\nexport const getTemperatureUnit = createSelector(getUnit, (unit) =>\n  unit === \"metric\" ? \"°C\" : \"°F\"\n);\n","import React, {  } from \"react\";\nimport {\n  Card as MuiCard,\n  CardContent,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport useTemperature from \"./useTemperature\";\n\nconst useStyles = makeStyles((theme) => ({\n  default: {\n    border: \"1px solid black\",\n  },\n  active: {\n    border: \"3px solid black\",\n  },\n}));\n\nexport default function Card({\n  date,\n  temperature,\n  isActive,\n  id,\n  activateCard,\n}) {\n  const temperatureValue = useTemperature(temperature);\n\n  const classes = useStyles();\n\n  return (\n    <MuiCard\n      className={isActive ? classes.active : classes.default}\n      onClick={() => activateCard(id)}\n    >\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          Temp:\n        </Typography>\n        <Typography variant=\"h6\" component=\"h2\">\n          {temperatureValue}\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          Date:\n        </Typography>\n        <Typography variant=\"h6\" component=\"h2\">\n          {date}\n        </Typography>\n      </CardContent>\n    </MuiCard>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { getTemperatureUnit } from \"../temperature/selectors\";\n\nexport default function useTemperature(value) {\n  const [temperatureValue, setTemperatureValue] = useState(\"0 F\");\n\n  const unit = useSelector(getTemperatureUnit);\n\n  useEffect(() => {\n    setTemperatureValue(`${value} ${unit}`);\n  }, [value, unit]);\n\n  return temperatureValue;\n}\n","import { createSelector } from \"reselect\";\nimport { getCards } from \"../../shared/selectors\";\n\nexport const getPageIndex = (state) => state.pagination.pageIndex;\nexport const getPageSize = (state) => state.pagination.pageSize;\n\nexport const isPrevPageVisible = createSelector(\n  getPageIndex,\n  (pageIndex) => pageIndex > 0\n);\n\nexport const isNextPageVisible = createSelector(\n  getPageIndex,\n  getPageSize,\n  getCards,\n  (pageIndex, pageSize, cards) => pageIndex + pageSize < cards?.length\n);\n","import { createSelector } from \"reselect\";\nimport { getCards } from \"../../shared/selectors\";\nimport { getPageIndex, getPageSize } from \"../pagination/selectors\";\n\nexport const getActiveCardId = (state) => state.card.activeCardId;\n\nexport const getVisibleCards = createSelector(\n  getCards,\n  getPageSize,\n  getPageIndex,\n  (cards, pageSize, pageIndex) => cards.slice(pageIndex, pageIndex + pageSize)\n);\n\nexport const isActiveCardVisible = createSelector(\n  getActiveCardId,\n  getVisibleCards,\n  (activeCardId, visibleCards) =>\n    visibleCards.find(({ id }) => id === activeCardId)\n);\n","export const BASE_URL = \"https://api.openweathermap.org\";\n","import { BASE_URL } from \"./sharedConstants\";\n\nexport async function fetchWeatherByUnit(unit) {\n  const res = await fetch(\n    `${BASE_URL}/data/2.5/forecast?q=Munich,de&APPID=${process.env.REACT_APP_API_KEY}&units=${unit}`\n  );\n  const data = await res.json();\n  return data.list;\n}\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { fetchWeatherByUnit } from \"./sharedApi\";\nimport { formatDate } from \"./utils\";\n\nexport const fetchWeather = createAsyncThunk(\"fetchWeather\", async (unit) => {\n  const list = await fetchWeatherByUnit(unit);\n\n  return list?.map(({ dt, main: { temp } }, index) => ({\n    date: formatDate(dt),\n    temperature: Math.round(temp),\n    id: index,\n  }));\n});\n","export function formatDate(dateTime) {\n  const date = new Date(+dateTime * 1000);\n  const formatedDate = date\n    .toLocaleString(\"en-ie\", {\n      day: \"numeric\",\n      month: \"short\",\n      year: \"numeric\",\n    })\n    .replaceAll(\" \", \"-\");\n  return formatedDate;\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { fetchWeather } from \"../../shared/thunks\";\n\nconst initialState = {\n  cards: [],\n  activeCardId: 2,\n};\n\nexport const cardSlice = createSlice({\n  name: \"card\",\n  initialState,\n  reducers: {\n    setActiveCardId: (state, action) => {\n      state.activeCardId = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchWeather.fulfilled, (state, action) => {\n      const cards = action.payload\n        .reduce((acc, { date, temperature }, idx) => {\n          if (idx % 8 === 0) {\n            acc.push({ date, temperature, id: acc.length });\n          } else {\n            const lastCardIdx = acc.length - 1;\n            acc[lastCardIdx].temperature += temperature;\n          }\n\n          return acc;\n        }, [])\n        .map((card) => ({\n          ...card,\n          temperature: Math.round(card.temperature / 8),\n        }));\n\n      state.cards = cards;\n    });\n  },\n});\n\nexport const { setActiveCardId } = cardSlice.actions;\n\nexport default cardSlice.reducer;\n","import { Box, makeStyles } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React, { useCallback } from \"react\";\nimport Card from \"./Card\";\nimport { getActiveCardId, getVisibleCards } from \"./selectors\";\nimport { setActiveCardId } from \"./cardSlice\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    marginTop: 20,\n  },\n}));\n\nexport function CardList() {\n  const visibleCards = useSelector(getVisibleCards);\n\n  const activeCardId = useSelector(getActiveCardId);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleCardActivated = useCallback(\n    (id) => dispatch(setActiveCardId(id)),\n    [dispatch]\n  );\n\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"space-between\"\n      alignSelf=\"center\"\n      className={classes.root}\n    >\n      {visibleCards.map(({ date, temperature, id }) => (\n        <Card\n          key={id}\n          temperature={temperature}\n          date={date}\n          id={id}\n          isActive={activeCardId === id}\n          activateCard={handleCardActivated}\n        />\n      ))}\n    </Box>\n  );\n}\n","import { createMuiTheme } from \"@material-ui/core/styles\";\nimport purple from \"@material-ui/core/colors/purple\";\nimport green from \"@material-ui/core/colors/green\";\n\nconst theme = createMuiTheme({\n  typography: {\n    fontSize: 16,\n  },\n  palette: {\n    primary: {\n      main: purple[500],\n    },\n    secondary: {\n      main: green[500],\n    },\n  },\n  containerWidth: 650,\n  breakpoints: {\n    values: {\n      sm: 650,\n    },\n  },\n});\n\ntheme.typography.h1 = {\n  fontSize: \"2rem\",\n  [theme.breakpoints.up(\"sm\")]: {\n    fontSize: \"2rem\",\n  },\n};\n\n\ntheme.typography.h4 = {\n  fontSize: \"1.5rem\",\n  [theme.breakpoints.up(\"sm\")]: {\n    fontSize: \"1.8rem\",\n  },\n};\n\ntheme.typography.h5 = {\n  fontSize: \"1.3rem\",\n  [theme.breakpoints.up(\"sm\")]: {\n    fontSize: \"1.6rem\",\n  },\n};\n\ntheme.typography.h6 = {\n  fontSize: \"1.2rem\",\n  [theme.breakpoints.up(\"sm\")]: {\n    fontSize: \"1.5rem\",\n  },\n};\n\nexport default theme;\n","import { createSelector } from \"reselect\";\nimport { getActiveCardId } from \"../card/selectors\";\n\nexport const getVisibleBars = createSelector(\n  (state) => state.chart.bars,\n  getActiveCardId,\n  (bars, activeCardId) => bars[activeCardId]\n);\n","import { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport theme from \"../../theme\";\nimport { getTemperatureUnit } from \"../temperature/selectors\";\nimport { getVisibleBars } from \"./selectors\";\n\nconst options = {\n  chart: {\n    type: \"column\",\n    width: theme.containerWidth,\n    style: {\n      maxWidth: \"calc(100vw - 8px)\",\n    },\n  },\n  title: {\n    text: \"\",\n  },\n  subtitle: {\n    text: \"\",\n  },\n  xAxis: {\n    categories: [],\n    crosshair: false,\n    labels: {\n      style: {\n        fontSize: \"1.5rem\",\n      },\n    },\n  },\n  yAxis: {\n    min: 0,\n    title: {\n      enabled: false,\n    },\n    labels: {\n      enabled: false,\n    },\n  },\n  plotOptions: {\n    column: {\n      borderWidth: 0,\n      pointWidth: 60,\n    },\n  },\n  series: [\n    {\n      name: \"Temperature\",\n      data: [],\n    },\n  ],\n  legend: {\n    enabled: false,\n  },\n  responsive: {\n    rules: [\n      {\n        condition: {\n          maxWidth: 649,\n        },\n        chartOptions: {\n          legend: {\n            enabled: false,\n          },\n          plotOptions: {\n            column: {\n              borderWidth: 0,\n              pointWidth: 20,\n            },\n          },\n          xAxis: {\n            labels: {\n              style: {\n                fontSize: \"1rem\",\n              },\n            },\n          },\n        },\n      },\n    ],\n  },\n};\n\nexport default function useChartOptions() {\n  const [chartOptions, setChartOptions] = useState(options);\n  const temperatureUnit = useSelector(getTemperatureUnit);\n  const visibleBars = useSelector(getVisibleBars);\n\n  useEffect(() => {\n    const barsWIthUnits = visibleBars.map(\n      (item) => `${item} ${temperatureUnit}`\n    );\n    const newOptions = {\n      ...options,\n      series: { data: visibleBars },\n      xAxis: { categories: barsWIthUnits },\n    };\n\n    setChartOptions(newOptions);\n  }, [visibleBars, temperatureUnit]);\n\n  return chartOptions;\n}\n","import React from \"react\";\nimport { Box, makeStyles } from \"@material-ui/core\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport Highcharts from \"highcharts\";\nimport useChartOptions from \"./useChartOptions\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: \"100%\",\n  },\n}));\n\nexport function BarChart() {\n  const classes = useStyles();\n  const chartOptions = useChartOptions();\n\n  return (\n    <Box display=\"flex\" className={classes.root}>\n      <HighchartsReact highcharts={Highcharts} options={chartOptions} />\n    </Box>\n  );\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  pageIndex: 1,\n  pageSize: 3,\n};\n\nexport const paginationSlice = createSlice({\n  name: \"pagination\",\n  initialState,\n  reducers: {\n    setPage: (state, action) => {\n      state.pageIndex = action.payload;\n    },\n  },\n});\n\nexport const { setPage } = paginationSlice.actions;\n\nexport default paginationSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { setActiveCardId } from \"../features/card/cardSlice\";\nimport {\n  getVisibleCards,\n  isActiveCardVisible,\n} from \"../features/card/selectors\";\nimport { setPage } from \"../features/pagination/paginationSlice\";\nimport { fetchWeather } from \"./thunks\";\n\nconst initialState = {\n  loading: true,\n};\n\nexport const sharedSlice = createSlice({\n  name: \"shared\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchWeather.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(fetchWeather.fulfilled, (state) => {\n        state.loading = false;\n      });\n  },\n});\n\nexport const changePage = (newPageIdx) => (dispatch, getState) => {\n  dispatch(setPage(newPageIdx));\n\n  const state = getState();\n\n  if (!isActiveCardVisible(state)) {\n    const visibleCards = getVisibleCards(state);\n    const newActiveCardId = visibleCards[0].id;\n    dispatch(setActiveCardId(newActiveCardId));\n  }\n};\n\nexport default sharedSlice.reducer;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Box, IconButton, makeStyles } from \"@material-ui/core\";\nimport { ArrowRightAlt } from \"@material-ui/icons\";\nimport {\n  getPageIndex,\n  isNextPageVisible,\n  isPrevPageVisible,\n} from \"./selectors\";\n\nimport { changePage } from \"../../shared/sharedSlice\";\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    height: 140,\n    width: \"auto\",\n    color: \"blue\",\n    [theme.breakpoints.down(\"sm\")]: {\n      height: 80,\n    },\n  },\n}));\n\nexport function Pagination() {\n  const isNextVisible = useSelector(isNextPageVisible);\n  const isPrevVisible = useSelector(isPrevPageVisible);\n  const pageIndex = useSelector(getPageIndex);\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  return (\n    <Box display=\"flex\" justifyContent=\"space-between\" width=\"100%\">\n      <IconButton\n        aria-label=\"previous\"\n        onClick={() => dispatch(changePage(pageIndex - 1))}\n        style={{\n          visibility: isPrevVisible ? \"visible\" : \"hidden\",\n        }}\n        disableRipple\n      >\n        <ArrowRightAlt\n          className={classes.icon}\n          style={{ transform: \"rotate(180deg)\" }}\n        />\n      </IconButton>\n      <IconButton\n        aria-label=\"next\"\n        onClick={() => dispatch(changePage(pageIndex + 1))}\n        style={{\n          visibility: isNextVisible ? \"visible\" : \"hidden\",\n        }}\n        disableRipple\n      >\n        <ArrowRightAlt className={classes.icon} />\n      </IconButton>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  FormControl,\n  FormControlLabel,\n  makeStyles,\n  Radio,\n  RadioGroup,\n} from \"@material-ui/core\";\nimport { getUnit } from \"./selectors\";\nimport { fetchWeather } from \"../../shared/thunks\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControlLabel: {\n    \"& svg\": {\n      width: \"1em\",\n      height: \"auto\",\n      [theme.breakpoints.up(\"sm\")]: {\n        width: \"1.5em\",\n      },\n    },\n    \"& .MuiFormControlLabel-label\": {\n      ...theme.typography.h4,\n    },\n  },\n}));\n\nexport function Temperature() {\n  const unit = useSelector(getUnit);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  function handleUnitChange({ target: { value } }) {\n    dispatch(fetchWeather(value));\n  }\n\n  return (\n    <FormControl\n      component=\"fieldset\"\n      style={{\n        width: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n      }}\n    >\n      <RadioGroup\n        row\n        aria-label=\"temperature\"\n        name=\"temperature\"\n        style={{\n          width: \"88%\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n        }}\n        defaultValue={unit}\n        onChange={handleUnitChange}\n      >\n        <FormControlLabel\n          className={classes.formControlLabel}\n          value=\"metric\"\n          control={<Radio color=\"primary\" />}\n          label=\"Celsius\"\n        />\n\n        <FormControlLabel\n          className={classes.formControlLabel}\n          value=\"imperial\"\n          control={<Radio color=\"primary\" />}\n          label=\"Fahrenheit\"\n        />\n      </RadioGroup>\n    </FormControl>\n  );\n}\n","import { CardList } from \"../features/card/CardList\";\nimport { BarChart } from \"../features/chart/BarChart\";\nimport { Pagination } from \"../features/pagination/Pagination\";\nimport { Temperature } from \"../features/temperature/Temperature\";\n\nexport default function WeatherInfo() {\n  return (\n    <>\n      <Temperature />\n      <Pagination />\n      <CardList />\n      <BarChart />\n    </>\n  );\n}\n","import React, { useEffect } from \"react\";\n\nimport { Box, makeStyles } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loading from \"./shared/Loading\";\nimport { isLoading } from \"./shared/selectors\";\nimport WeatherInfo from \"./shared/WeatherInfo\";\nimport { fetchWeather } from \"./shared/thunks\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: theme.containerWidth,\n    display: \"flex\",\n    flexDirection: \"column\",\n    margin: \"0 auto\",\n    alignItems: \"center\",\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const loading = useSelector(isLoading);\n  useEffect(() => {\n    dispatch(fetchWeather(\"imperial\"));\n  }, [dispatch]);\n\n  return (\n    <Box className={classes.root}>\n      {loading ? <Loading /> : <WeatherInfo />}\n    </Box>\n  );\n}\n\nexport default App;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { fetchWeather } from \"../../shared/thunks\";\n\nconst initialState = {\n  unit: \"imperial\",\n};\n\nexport const temperatureSlice = createSlice({\n  name: \"temperature\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWeather.pending, (state, { meta: { arg } }) => {\n      state.unit = arg;\n    });\n  },\n});\n\nexport default temperatureSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { fetchWeather } from \"../../shared/thunks\";\n\nconst initialState = {\n  bars: [],\n};\n\nexport const chartSlice = createSlice({\n  name: \"chart\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWeather.fulfilled, (state, action) => {\n      const bars = action.payload.reduce((acc, { temperature }, idx) => {\n        if (idx % 8 === 0) {\n          acc.push([temperature]);\n        } else {\n          acc[acc.length - 1].push(temperature);\n        }\n        return acc;\n      }, []);\n\n      state.bars = bars;\n    });\n  },\n});\n\nexport default chartSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport pagination from \"../features/pagination/paginationSlice\";\nimport card from \"../features/card/cardSlice\";\nimport temperature from \"../features/temperature/temperatureSlice\";\nimport chart from \"../features/chart/chartSlice\";\nimport shared from \"../shared/sharedSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    pagination,\n    card,\n    temperature,\n    shared,\n    chart,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport theme from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}